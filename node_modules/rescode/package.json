{
  "name": "rescode",
  "description": "Generate Codes (EAN13, QRCODE ..)",
  "version": "0.1.10",
  "author": {
    "name": "Marco Egbring",
    "email": "marco.egbring@epha.ch"
  },
  "dependencies": {},
  "keywords": [
    "codes",
    "ean13",
    "qrcode"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/epha/rescode"
  },
  "main": "index",
  "bin": {},
  "scripts": {
    "prepublish": "npm prune"
  },
  "devDependencies": {
    "assert": "~1.1.2",
    "mocha": "~2.0.1",
    "gulp": "~3.8.9",
    "gulp-jshint": "~1.8.6",
    "gulp-mocha": "~1.1.1",
    "jshint-stylish": "~1.0.0"
  },
  "readme": "Codes\n=========\nNotice that I am not the author of the code, I am just the creator of an npm module out of the great library from https://code.google.com/p/bwip-js/.\n\nInstall\n---------\n\tnpm install rescode\n    \n    \nBarcode or Code types available\n----------\nean2, ean5, ean8, upca, upce, isbn, ismn, issm, code128, gs1-128, ean13, sscc18, code39, code39ext, code32, pzn, code93, code93ext, interleaved2of5, itf14, identcode, leitcode, databaromni, databarstacked, databarstackedomni, databartruncated, databarlimited, databarexpanded, databarexpandedstacked, pharmacode, pharmacode2, code2of5, code11, bc412, rationalizedCodabar, onecode, postnet, planet, royalmail, auspost, kix, japanpost, msi, plessey, telepen, posicode, codablockf, code16k, code49, channelcode, flattermarken, raw, daft, symbol, pdf417, micropdf417, datamatrix, qrcode, maxicode, azteccode, codeone, gs1-cc, ean13composite, ean8composite, upcacomposite, upcecomposite, databaromnicomposite, databarstackedcomposite, databarstackedomnicomposite, databartruncatedcomposite, databarlimitedcomposite, databarexpandedcomposite, databarexpandedstackedcomposite, gs1-128composite, gs1datamatrix, hibccode39, hibccode128, hibcdatamatrix, hibcpdf417, hibcmicropdf417, hibcqrcode, hibccodablockf\n\t\nExample loading specific barcode types\n---------------------------------------\n\tvar codes = require(\"rescode\");\n\n\tfunction( res, req ) \n\t{\n        // Sequence is important\n\t\tcodes.loadModules([\"ean2\", \"ean5\", \"ean8\", \"ean13\"]);\n\t\t\n\t\tvar data8 = codes.create(\"ean8\",\"12345678\");\n        \n        res.setHeader(\"Content-Type\",\"image/png\");\n\t\tres.end( data8 );\n        \n        OR\n        \n        res.end(\"<html><img src='data:image/png;base64,\"+data8.toString(\"base64\")+\"' /></html>\");\n\t}\t\n\t\nExample loading ean barcode types and setting specific options\n--------------------------------------------------------------------\n\tvar codes = require(\"rescode\");\n\n\tfunction( res, req ) \n\t{\n\t\tcodes.loadModules([\"ean2\", \"ean5\"]);\t\t\n        codes.loadModules([\"ean8\"], { \"includetext\":false, \"guardwhitespace\":false, \"inkspread\":0, scaleX:3, textyoffset:-15 });\n\t\tcodes.loadModules([\"ean13\"]);\n        \n\t\tvar data8 = codes.create(\"ean8\",\"12345678\");\n        \n        res.setHeader(\"Content-Type\",\"image/png\");\n\t\tres.end( data8 );\n        \n        OR\n        \n        res.end(\"<html><img src='data:image/png;base64,\"+data8.toString(\"base64\")+\"' /></html>\");\n\t}\t\n\t\t\nExample loading qrcode\n----------------------------------------------------------------------------\n\n\tvar codes = require(\"rescode\");\n\n\tfunction( res, req ) \n\t{\n      // Level L  - 7% of codewords can be restored\n      // Level M  - 15% of codewords can be restored\n      // Level Q  - 25% of codewords can be restored\n      // Level H  - 30% of codewords can be restored\n      // IMPORTANT white padding around qrcode \n      \n      // CREATE\n      codes.loadModules([\"qrcode\"], { \"eclevel\":\"M\" , \"version\": \"4\", \"scaleX\": 2, \"scaleY\": 2} );  \n      \n      var data = codes.create(\"qrcode\",\"http://npmjs.org\");\n        \n      OR\n      \n      codes.loadModules([\"qrcode\"]);  \n      \n      var data = codes.create(\"qrcode\",\"http://npmjs.org\", { \"eclevel\":\"M\" , \"version\": \"4\", \"scaleX\": 2, \"scaleY\": 2} );\n        \n      // SHOW\n      res.setHeader(\"Content-Type\",\"image/png\");\n      res.end( data );\n      \n      OR\n      \n      res.end(\"<html><img src='data:image/png;base64,\"+data.toString(\"base64\")+\"' /></html>\");\n\t}\n\n\nConfigure\n---------\nChoose in lib/codes.js the Adatper PNG ( binary png ) or Canvas ( dataURL (smaller size), but canvas has to be installed )\n\n\t\nThanks\n---------\nTo Jens Olsson for dynamic loading of the libraries\n  ",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/epha/rescode/issues"
  },
  "homepage": "https://github.com/epha/rescode",
  "_id": "rescode@0.1.10",
  "_shasum": "35defe90f31cec7043aa31d91b36404df5c6917c",
  "_from": "rescode@",
  "_resolved": "https://registry.npmjs.org/rescode/-/rescode-0.1.10.tgz"
}
